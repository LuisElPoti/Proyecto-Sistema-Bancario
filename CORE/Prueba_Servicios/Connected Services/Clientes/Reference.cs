//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Prueba_Servicios.Clientes {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Clientes.IWSClientes")]
    public interface IWSClientes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSClientes/AgregarCliente", ReplyAction="http://tempuri.org/IWSClientes/AgregarClienteResponse")]
        void AgregarCliente(string Nombre, int TipoDocumento, string Documento, string Correo, string Telefono, string Direccion, System.DateTime FechaNacimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSClientes/AgregarCliente", ReplyAction="http://tempuri.org/IWSClientes/AgregarClienteResponse")]
        System.Threading.Tasks.Task AgregarClienteAsync(string Nombre, int TipoDocumento, string Documento, string Correo, string Telefono, string Direccion, System.DateTime FechaNacimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSClientes/EliminarCliente", ReplyAction="http://tempuri.org/IWSClientes/EliminarClienteResponse")]
        void EliminarCliente(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSClientes/EliminarCliente", ReplyAction="http://tempuri.org/IWSClientes/EliminarClienteResponse")]
        System.Threading.Tasks.Task EliminarClienteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSClientes/ActualizarCliente", ReplyAction="http://tempuri.org/IWSClientes/ActualizarClienteResponse")]
        void ActualizarCliente(int id, string Nombre, int TipoDocumento, string Documento, string Correo, string Telefono, string Direccion, System.DateTime FechaNacimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSClientes/ActualizarCliente", ReplyAction="http://tempuri.org/IWSClientes/ActualizarClienteResponse")]
        System.Threading.Tasks.Task ActualizarClienteAsync(int id, string Nombre, int TipoDocumento, string Documento, string Correo, string Telefono, string Direccion, System.DateTime FechaNacimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSClientes/MostrarClientes", ReplyAction="http://tempuri.org/IWSClientes/MostrarClientesResponse")]
        System.Data.DataTable MostrarClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSClientes/MostrarClientes", ReplyAction="http://tempuri.org/IWSClientes/MostrarClientesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> MostrarClientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSClientes/BuscarCliente", ReplyAction="http://tempuri.org/IWSClientes/BuscarClienteResponse")]
        System.Data.DataTable BuscarCliente(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSClientes/BuscarCliente", ReplyAction="http://tempuri.org/IWSClientes/BuscarClienteResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> BuscarClienteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWSClientesChannel : Prueba_Servicios.Clientes.IWSClientes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSClientesClient : System.ServiceModel.ClientBase<Prueba_Servicios.Clientes.IWSClientes>, Prueba_Servicios.Clientes.IWSClientes {
        
        public WSClientesClient() {
        }
        
        public WSClientesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSClientesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSClientesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSClientesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AgregarCliente(string Nombre, int TipoDocumento, string Documento, string Correo, string Telefono, string Direccion, System.DateTime FechaNacimiento) {
            base.Channel.AgregarCliente(Nombre, TipoDocumento, Documento, Correo, Telefono, Direccion, FechaNacimiento);
        }
        
        public System.Threading.Tasks.Task AgregarClienteAsync(string Nombre, int TipoDocumento, string Documento, string Correo, string Telefono, string Direccion, System.DateTime FechaNacimiento) {
            return base.Channel.AgregarClienteAsync(Nombre, TipoDocumento, Documento, Correo, Telefono, Direccion, FechaNacimiento);
        }
        
        public void EliminarCliente(int id) {
            base.Channel.EliminarCliente(id);
        }
        
        public System.Threading.Tasks.Task EliminarClienteAsync(int id) {
            return base.Channel.EliminarClienteAsync(id);
        }
        
        public void ActualizarCliente(int id, string Nombre, int TipoDocumento, string Documento, string Correo, string Telefono, string Direccion, System.DateTime FechaNacimiento) {
            base.Channel.ActualizarCliente(id, Nombre, TipoDocumento, Documento, Correo, Telefono, Direccion, FechaNacimiento);
        }
        
        public System.Threading.Tasks.Task ActualizarClienteAsync(int id, string Nombre, int TipoDocumento, string Documento, string Correo, string Telefono, string Direccion, System.DateTime FechaNacimiento) {
            return base.Channel.ActualizarClienteAsync(id, Nombre, TipoDocumento, Documento, Correo, Telefono, Direccion, FechaNacimiento);
        }
        
        public System.Data.DataTable MostrarClientes() {
            return base.Channel.MostrarClientes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> MostrarClientesAsync() {
            return base.Channel.MostrarClientesAsync();
        }
        
        public System.Data.DataTable BuscarCliente(int id) {
            return base.Channel.BuscarCliente(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> BuscarClienteAsync(int id) {
            return base.Channel.BuscarClienteAsync(id);
        }
    }
}
