//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CORE_INTERFACES.wsReferenceCuenta {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wsReferenceCuenta.IWSCuenta")]
    public interface IWSCuenta {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSCuenta/AgregarCuenta", ReplyAction="http://tempuri.org/IWSCuenta/AgregarCuentaResponse")]
        void AgregarCuenta(int idCliente, int idTipoCuenta, int idBanco, string NumeroCuenta, bool Estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSCuenta/AgregarCuenta", ReplyAction="http://tempuri.org/IWSCuenta/AgregarCuentaResponse")]
        System.Threading.Tasks.Task AgregarCuentaAsync(int idCliente, int idTipoCuenta, int idBanco, string NumeroCuenta, bool Estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSCuenta/EliminarCuenta", ReplyAction="http://tempuri.org/IWSCuenta/EliminarCuentaResponse")]
        void EliminarCuenta(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSCuenta/EliminarCuenta", ReplyAction="http://tempuri.org/IWSCuenta/EliminarCuentaResponse")]
        System.Threading.Tasks.Task EliminarCuentaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSCuenta/ActualizarCuenta", ReplyAction="http://tempuri.org/IWSCuenta/ActualizarCuentaResponse")]
        void ActualizarCuenta(int id, bool Estado, decimal Balance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSCuenta/ActualizarCuenta", ReplyAction="http://tempuri.org/IWSCuenta/ActualizarCuentaResponse")]
        System.Threading.Tasks.Task ActualizarCuentaAsync(int id, bool Estado, decimal Balance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSCuenta/MostrarCuenta", ReplyAction="http://tempuri.org/IWSCuenta/MostrarCuentaResponse")]
        System.Data.DataTable MostrarCuenta();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSCuenta/MostrarCuenta", ReplyAction="http://tempuri.org/IWSCuenta/MostrarCuentaResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> MostrarCuentaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSCuenta/BuscarCuenta", ReplyAction="http://tempuri.org/IWSCuenta/BuscarCuentaResponse")]
        System.Data.DataTable BuscarCuenta(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSCuenta/BuscarCuenta", ReplyAction="http://tempuri.org/IWSCuenta/BuscarCuentaResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> BuscarCuentaAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWSCuentaChannel : CORE_INTERFACES.wsReferenceCuenta.IWSCuenta, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSCuentaClient : System.ServiceModel.ClientBase<CORE_INTERFACES.wsReferenceCuenta.IWSCuenta>, CORE_INTERFACES.wsReferenceCuenta.IWSCuenta {
        
        public WSCuentaClient() {
        }
        
        public WSCuentaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSCuentaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSCuentaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSCuentaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AgregarCuenta(int idCliente, int idTipoCuenta, int idBanco, string NumeroCuenta, bool Estado) {
            base.Channel.AgregarCuenta(idCliente, idTipoCuenta, idBanco, NumeroCuenta, Estado);
        }
        
        public System.Threading.Tasks.Task AgregarCuentaAsync(int idCliente, int idTipoCuenta, int idBanco, string NumeroCuenta, bool Estado) {
            return base.Channel.AgregarCuentaAsync(idCliente, idTipoCuenta, idBanco, NumeroCuenta, Estado);
        }
        
        public void EliminarCuenta(int id) {
            base.Channel.EliminarCuenta(id);
        }
        
        public System.Threading.Tasks.Task EliminarCuentaAsync(int id) {
            return base.Channel.EliminarCuentaAsync(id);
        }
        
        public void ActualizarCuenta(int id, bool Estado, decimal Balance) {
            base.Channel.ActualizarCuenta(id, Estado, Balance);
        }
        
        public System.Threading.Tasks.Task ActualizarCuentaAsync(int id, bool Estado, decimal Balance) {
            return base.Channel.ActualizarCuentaAsync(id, Estado, Balance);
        }
        
        public System.Data.DataTable MostrarCuenta() {
            return base.Channel.MostrarCuenta();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> MostrarCuentaAsync() {
            return base.Channel.MostrarCuentaAsync();
        }
        
        public System.Data.DataTable BuscarCuenta(int id) {
            return base.Channel.BuscarCuenta(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> BuscarCuentaAsync(int id) {
            return base.Channel.BuscarCuentaAsync(id);
        }
    }
}
